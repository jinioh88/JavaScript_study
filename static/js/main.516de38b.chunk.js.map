{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","authService","auth","firebaseInstance","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","error","setError","newAccount","setNewAccount","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","id","delete","attachmentUrl","refFromURL","toggleEditing","update","src","with","height","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","collection","add","createdAt","Date","now","creatorId","maxLength","accept","theFile","files","reader","FileReader","onload","finishedEvent","result","currentTarget","readAsDataURL","width","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","newArray","docs","map","document","data","Profile","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","updateProfile","signOut","push","Navigation","to","AppRouter","isLoggedIn","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","diaplayName","args","Boolean","currentUser","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.516de38b.chunk.js","sourcesContent":["import firebase from 'firebase/compat/app';\r\nimport 'firebase/compat/auth';\r\nimport 'firebase/compat/firestore';\r\nimport 'firebase/compat/storage';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_APP_ID\r\n  };\r\n\r\n  firebase.initializeApp(firebaseConfig);\r\n  \r\n  export const authService = firebase.auth();\r\n  export const firebaseInstance = firebase;\r\n  export const dbService = firebase.firestore();\r\n  export const storageService = firebase.storage();","import { useState } from 'react';\r\nimport { authService } from 'fbase';\r\n\r\nconst AuthForm = () => {\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [error, setError] = useState('');\r\n    const [newAccount, setNewAccount] = useState(true);  \r\n    const toggleAccount = () => { setNewAccount((prev) => !prev); };\r\n\r\n    const onChange = (event) => {\r\n        const {\r\n            target: { name, value },\r\n        } = event;\r\n        if (name === 'email') {\r\n            setEmail(value);\r\n        } else if (name === 'password') {\r\n            setPassword(value);\r\n        }\r\n    };\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            if (newAccount) {\r\n                await authService.createUserWithEmailAndPassword(email, password);\r\n            } else {\r\n                await authService.signInWithEmailAndPassword(email, password);\r\n            }\r\n        } catch (error) {\r\n            setError(error.message);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={onSubmit}>\r\n                <input type='email' placeholder='Email' name='email' value={email} onChange={onChange} required />\r\n                {error}\r\n                <input type='password' placeholder='Password' name='password' value={password} onChange={onChange} required />\r\n                <input type='submit' value={newAccount ? \"Create Account\" : \"Log In\"} />\r\n            </form>\r\n                <span onClick={toggleAccount}>\r\n                {newAccount ? 'Sign In' : 'Create Account'}\r\n            </span>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AuthForm;","import { authService, firebaseInstance } from 'fbase';\r\nimport AuthForm from 'components/AuthForm';\r\n\r\nconst Auth = () => {\r\n \r\n    const onSocialClick = async (event) => {\r\n        const { target: {name}, } = event;\r\n        let provider;\r\n        if (name === 'google') {\r\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n        } else if (name === 'github') {\r\n            provider = new firebaseInstance.auth.GithubAuthProvider();\r\n        }\r\n\r\n        await authService.signInWithPopup(provider);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <AuthForm />\r\n            <div>\r\n                <button onClick={onSocialClick} name='google'>Continue with Google</button>\r\n                <button onClick={onSocialClick} name='github'>Continue with Github</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Auth;","import { dbService, storageService } from 'fbase';\r\nimport { useState } from 'react'; \r\n\r\nconst Nweet = ({ nweetObj, isOwner }) => {\r\n    const [editing, setEditing] = useState(false);\r\n    const [newNweet, setNewNweet] = useState(nweetObj.text);\r\n\r\n    const onDeleteClick = async () => {\r\n        const ok = window.confirm('삭제하시겠습니까?');\r\n        if (ok) {\r\n            await dbService.doc(`nweets/${nweetObj.id}`).delete();\r\n        }\r\n\r\n        if (nweetObj.attachmentUrl !== '') {\r\n            await storageService.refFromURL(nweetObj.attachmentUrl).delete();\r\n        }\r\n    }\r\n\r\n    const toggleEditing = () => setEditing((prev) => !prev);\r\n    \r\n    const onChange = (event) => {\r\n        const { target: { value }, } = event;\r\n        setNewNweet(value);\r\n    };\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        await dbService.doc(`nweets/${nweetObj.id}`).update({ text: newNweet });\r\n        setEditing(false);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {editing ? (\r\n                <>\r\n                    <form onSubmit={onSubmit}>\r\n                        <input onChange={onChange} value={newNweet} required />\r\n                        <input type='submit' value='Update Nweet' />\r\n                    </form>\r\n                    <button onClick={toggleEditing}>Cancel</button>\r\n                </>\r\n            ) : (\r\n                <>\r\n                <h4>{nweetObj.text}</h4>\r\n                {nweetObj.attachmentUrl && (\r\n                    <img src={nweetObj.attachmentUrl} with='50px' height='50px' />\r\n                )}\r\n                {\r\n                    isOwner && (\r\n                        <>\r\n                            <button onClick={onDeleteClick}>Delete Nweet</button>\r\n                            <button onClick={toggleEditing}>Edit Nweet</button>\r\n                        </>\r\n                    )\r\n                } \r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Nweet;","import { v4 as uuidv4 } from 'uuid';\r\nimport { useState } from 'react';\r\nimport { dbService, storageService } from 'fbase';\r\n\r\nconst NweetFactory = ({userObj}) => {\r\n    const [nweet, setNweet] = useState('');\r\n    const [attachment, setAttachment] = useState('');\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        \r\n        let attachmentUrl = '';\r\n        if (attachment !== '') {\r\n            const attachmentRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\r\n            const response = await attachmentRef.putString(attachment, 'data_url');\r\n            attachmentUrl = await response.ref.getDownloadURL();\r\n        }\r\n        \r\n        await dbService.collection('nweets').add({\r\n            text: nweet,\r\n            createdAt: Date.now(),\r\n            creatorId: userObj.uid,\r\n            attachmentUrl,\r\n        });\r\n\r\n        await dbService.collection('nweets').add({\r\n            text: nweet,\r\n            createdAt: Date.now(),\r\n            creatorId: userObj.uid,\r\n        });\r\n        setNweet('');\r\n        setAttachment('');\r\n    };\r\n\r\n    const onChange = (event) => {\r\n        event.preventDefault();\r\n        const { target: { value }, } = event;\r\n        setNweet(value);\r\n    }\r\n\r\n    const onFileChange = (event) => {\r\n        const { target: { files }, } = event;\r\n        const theFile = files[0];\r\n        \r\n        const reader = new FileReader();\r\n        reader.onload = (finishedEvent) => {\r\n            const { currentTarget: { result }, } = finishedEvent;\r\n            setAttachment(result);\r\n        };\r\n        reader.readAsDataURL(theFile);\r\n    };\r\n\r\n    const onClearAttachment = () => { setAttachment('') };\r\n    return (\r\n        <form onSubmit={onSubmit}>\r\n            <input value={nweet} onChange={onChange} type='text' placeholder=\"What's on your mind?\" maxLength={120} />\r\n            <input type='file' accept='image/*' onChange={onFileChange} />\r\n            <input type='submit' value='Nweet' />\r\n            {attachment && (\r\n                <div>\r\n                        <img src={attachment} width='50px' height='50px' />\r\n                        <button onClick={onClearAttachment}>Clear</button>\r\n                </div>\r\n            )}\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default NweetFactory;","import { useState, useEffect } from 'react';\r\nimport { dbService } from 'fbase';\r\nimport Nweet from 'components/Nweet';\r\nimport NweetFactory from 'components/NweetFactory';\r\n\r\n\r\nconst Home = ({ userObj }) => {\r\n\r\n    const [nweets, setNweets] = useState([]);\r\n\r\n    useEffect(() => {\r\n        dbService.collection('nweets').onSnapshot((snapshot) => {\r\n            const newArray = snapshot.docs.map((document) => ({\r\n                id: document.id,\r\n                ...document.data(),\r\n            }));\r\n            setNweets(newArray);\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <NweetFactory userObj={userObj} />\r\n            <div>\r\n                {nweets.map((nweet) => (\r\n                    <Nweet key={nweet.id} nweetObj={nweet} isOwner={nweet.creatorId === userObj.uid} />\r\n                ))}\r\n            </div>\r\n        </>\r\n        \r\n    );\r\n};\r\n\r\nexport default Home;","import { authService, dbService } from \"fbase\";\r\nimport { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst Profile = ({ userObj, refreshUser }) => {\r\n    const history = useHistory();\r\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n\r\n    const onLogOutClick = () => {\r\n        authService.signOut();\r\n        history.push('/');\r\n    };\r\n\r\n    // useEffect(() => {\r\n    //     getMyNweets();\r\n    // }, []);\r\n\r\n    // const getMyNweets = async () => {\r\n    //     const nweets = await dbService.collection('nweets').where('creatorId', '==', userObj.uid).orderBy('createdAt', 'asc').get();\r\n    //     console.log(nweets.docs.map((doc) => doc.data()));\r\n    // };\r\n\r\n    const onChange = (event) => {\r\n        const { target: {value}, } = event;\r\n        setNewDisplayName(value);\r\n    }\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if (userObj.displayName !== newDisplayName) {\r\n            await userObj.updateProfile({ displayName: newDisplayName });\r\n            refreshUser();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={onSubmit}>\r\n                <input type='text' placeholder='Display name' onChange={onChange} value={newDisplayName} />\r\n                <input type='submit' value='Update Profile' />\r\n            </form>\r\n            <button onClick={onLogOutClick}>Log Out</button>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Profile;","import { Link } from 'react-router-dom';\r\n\r\nconst Navigation = ({ userObj }) => {\r\n    return (\r\n        <nav>\r\n            <ul>\r\n                <li>\r\n                    <Link to='/'>Home</Link>\r\n                </li>\r\n                <li>\r\n                    <Link to='/profile'>{userObj.displayName}의 Profile</Link>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Navigation;","import { HashRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport Auth from 'routes/Auth';\r\nimport Home from 'routes/Home';\r\nimport Profile from 'routes/Profile';\r\nimport Navigation from './Navigation';\r\n\r\nconst AppRouter = ({ isLoggedIn, userObj, refreshUser }) => {\r\n    return (\r\n        <Router>\r\n            {isLoggedIn && <Navigation userObj={userObj} />}\r\n            <Switch>\r\n                {isLoggedIn ? (\r\n                    <>\r\n                        <Route exact path='/'>\r\n                            <Home userObj={userObj} />\r\n                        </Route>\r\n                        <Route exact path='/profile'>\r\n                            <Profile userObj={userObj} refreshUser={refreshUser} />\r\n                        </Route>\r\n                    </>\r\n                ) : (\r\n                    <Route exact path='/'>\r\n                        <Auth />\r\n                    </Route>\r\n                )}\r\n            </Switch>\r\n        </Router>\r\n    );\r\n};\r\n\r\nexport default AppRouter;","import AppRouter from \"components/Router\";\nimport { useEffect, useState } from 'react';\nimport { authService } from 'fbase';\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          uid: user.uid,\n          diaplayName: user.displayName,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setUserObj(false);\n      }\n      setInit(true);\n    });\n  }, []);\n\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      uid: user.uid,\n      diaplayName: user.displayName,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n  \n  return (\n    <>\n      {init ? (<AppRouter isLoggedIn={Boolean(userObj)} userObj={userObj} refreshUser={refreshUser} />) : (\"initializing...\")}\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}